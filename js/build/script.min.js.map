{"version":3,"sources":["../page.js","../arrivals.js"],"names":["$","ViewModel","self","this","arrivals","ko","observableArray","vm","extend","FastClick","attach","document","body","navigator","serviceWorker","register","then","reg","console","log","err","warn","jQuery","ArrivalViewModel","title","status","time","ArrivalApiService","getAll","get","response","ArrivalAdapter","toArrivalViewModel","data","toArrivalViewModels","length","_","map","item","ArrivalController","arrivalApiService","arrivalAdapter","arrivalController","addClass","removeClass","applyBindings","setInterval"],"mappings":"CAAA,SAAUA,GAGN,QAASC,aACL,GAAIC,MAAOC,IACXD,MAAKE,SAAWC,GAAGC,oBAIvB,GAAIC,IAAK,GAAIN,UACbD,GAAEQ,OAAOR,GACLO,GAAIA,KAGRP,EAAE,WAEES,UAAUC,OAAOC,SAASC,QAI1B,iBAAmBC,YACnBA,UAAUC,cAAcC,SAAS,WAAWC,KAAK,SAASC,KACtDC,QAAQC,IAAI,yCAA0CF,OAD1DJ,SAES,SAASO,KACdF,QAAQG,KAAK,0CAA2CD,QAIjEE,QC5BH,WACI,QAASC,oBACL,GAAIrB,MAAOC,IACXD,MAAKsB,MAAQ,GACbtB,KAAKuB,OAAS,GACdvB,KAAKwB,KAAO,GAGhB,QAASC,qBACL,GAAIzB,MAAOC,IAGXD,MAAK0B,OAAS,WACV,MAAO5B,GAAE6B,IAAI,mBAAmBb,KAAK,SAASc,UAC1C,MAAOA,aAKnB,QAASC,kBACL,GAAI7B,MAAOC,IAEXD,MAAK8B,mBAAqB,SAASC,MAC/B,GAAIA,KAAM,CACN,GAAI1B,IAAK,GAAIgB,iBAIb,OAHAhB,IAAGiB,MAAQS,KAAKT,MAChBjB,GAAGkB,OAASQ,KAAKR,OACjBlB,GAAGmB,KAAOO,KAAKP,KACRnB,GAEX,MAAO,OAGXL,KAAKgC,oBAAsB,SAASD,MAChC,MAAIA,OAAQA,KAAKE,OAAS,EACfC,EAAEC,IAAIJ,KAAM,SAASK,MACxB,MAAOpC,MAAK8B,mBAAmBM,YAO/C,QAASC,mBAAkBC,kBAAmBC,gBAC1C,GAAIvC,MAAOC,IAEXD,MAAK0B,OAAS,WAEV,MAAOY,mBAAkBZ,SAASZ,KAAK,SAASc,UAC5C,MAAOW,gBAAeP,oBAAoBJ,cAKtD,SAAU9B,GAEN,GAAIwC,mBAAoB,GAAIb,mBACxBc,eAAiB,GAAIV,gBAGrBW,kBAAoB,GAAIH,mBAAkBC,kBAAmBC,eAGjEzC,GAAE,kBAAkB2C,SAAS,WAC7BD,kBAAkBd,SAASZ,KAAK,SAASc,UAErC9B,EAAEO,GAAGH,SAAS0B,UACd9B,EAAE,kBAAkB4C,YAAY,aAEpCvC,GAAGwC,cAAc7C,EAAEO,GAGJuC,aAAY,WACvB9C,EAAE,kBAAkB2C,SAAS,WAC7BD,kBAAkBd,SAASZ,KAAK,SAASc,UAErC9B,EAAEO,GAAGH,SAAS0B,UACd9B,EAAE,kBAAkB4C,YAAY,cAErC,MACJtB","file":"script.min.js","sourcesContent":["(function($) {\n\n    // declare the view model used within the page\n    function ViewModel() {\n        var self = this;\n        self.arrivals = ko.observableArray([]);\n    }\n\n    // expose the view model through $\n    var vm = new ViewModel();\n    $.extend($, {\n        vm: vm\n    });\n\n    $(function() {\n        // fastclick\n        FastClick.attach(document.body);\n    });\n\n    // register the service worker if available\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.register('./sw.js').then(function(reg) {\n            console.log('Successfully registered service worker', reg);\n        }).catch(function(err) {\n            console.warn('Error whilst registering service worker', err);\n        });\n    }\n\n})(jQuery);\n","(function() {\n    function ArrivalViewModel() {\n        var self = this;\n        self.title = \"\";\n        self.status = \"\";\n        self.time = \"\";\n    }\n\n    function ArrivalApiService() {\n        var self = this;\n\n        // retrieves all arrivals from the API\n        self.getAll = function() {\n            return $.get(\"./api/data.json\").then(function(response) {\n                return response;\n            });\n        };\n    }\n\n    function ArrivalAdapter() {\n        var self = this;\n\n        self.toArrivalViewModel = function(data) {\n            if (data) {\n                var vm = new ArrivalViewModel();\n                vm.title = data.title;\n                vm.status = data.status;\n                vm.time = data.time;\n                return vm;\n            }\n            return null;\n        };\n\n        self.toArrivalViewModels = function(data) {\n            if (data && data.length > 0) {\n                return _.map(data, function(item) {\n                    return self.toArrivalViewModel(item);\n                });\n            }\n            return [];\n        };\n    }\n\n    function ArrivalController(arrivalApiService, arrivalAdapter) {\n        var self = this;\n\n        self.getAll = function() {\n            // retrieve all the arrivals from the API\n            return arrivalApiService.getAll().then(function(response) {\n                return arrivalAdapter.toArrivalViewModels(response);\n            });\n        };\n    }\n\n    (function($) {\n        // initialize the services and adapters\n        var arrivalApiService = new ArrivalApiService();\n        var arrivalAdapter = new ArrivalAdapter();\n\n        // initialize the controller\n        var arrivalController = new ArrivalController(arrivalApiService, arrivalAdapter);\n\n        // retrieve all routes\n        $(\".arrivals-list\").addClass(\"loading\");\n        arrivalController.getAll().then(function(response) {\n            // bind the arrivals to the UI\n            $.vm.arrivals(response);\n            $(\".arrivals-list\").removeClass(\"loading\");\n        });\n        ko.applyBindings($.vm);\n\n        // constantly ping to retrieve the latest routes\n        var interval = setInterval(function() {\n            $(\".arrivals-list\").addClass(\"loading\");\n            arrivalController.getAll().then(function(response) {\n                // bind the arrivals to the UI\n                $.vm.arrivals(response);\n                $(\".arrivals-list\").removeClass(\"loading\");\n            });\n        }, 3000);\n    })(jQuery);\n})();\n"]}